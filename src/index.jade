doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title The CITGM Diaries

    link(rel='stylesheet', type='text/css', href='build/build.css')

  style.
    .hello {
      background-image: url('images/hello-tharr.gif')
    }
    
    .canary {
      background-image: url('images/canary.gif')
    }

    .smoke {
      background-image: url('images/smoke.jpg')
    }
    
    .complicated {
      background-image: url('images/complicated.gif')
    }
    
    .confused {
      background-image: url('images/confused.gif')
    }
    
    .wutang {
      background-image: url('images/wutang.gif')
    }
    
    .pupper {
      background-image: url('images/pupper.gif')
    }
    
    .kitt {
      background-image: url('images/kitt.gif')
    }
    
    .pupper-too {
      background-image: url('images/pupper-too.gif')
    }
    
    .burrito-pupper {
      background-image: url('images/burrito-pupper.gif')
    }
    
    .recurse {
      background-image: url('images/recurse.gif')
    }
    
    .confused-bowie {
      background-image: url('images/confused-bowie.gif')
    }
    .chuck-thumbs-up {
      background-image: url('images/chuck.gif')
    }
    
    .precog {
      background-image: url('images/precog.jpg')
    }
    
    .breaking {
      background-image: utl('breaking.gif')
    }

  body
    article.minus-one
      section
        h2 The CITGM Diaries:
        h3 things break in mysterious and beautiful ways
        h4 With your host Myles Borins
        h4
          a(href='https://twitter.com/thealphanerd') @thealphanerd
        p  Node Interactive EU 2016
        
      section(data-bespoke-backdrop='hello')
        h1 Hallo
        
      section
        h1 My Name is Myles
        img.headroom(src='images/me.jpg' alt='itsa me!' width='200px' height='200px')
      
      section
        h3 I currently work at a small disruptive startup called IBM
        h4 contributing to Node.js
        
        img.headroom(src='images/ibm.jpg' alt='Eye Bee M by Paul Rand')
        
        h5 The opinions expressed in this talk are solely my own
      
      section
        h1 So what exactly is CITGM?
      
      section(data-bespoke-backdrop='canary')
        h3 The acronym stands for
        h2 Canary in the Gold Mine
      
      section(data-bespoke-backdrop='smoke')
        h3 It is the Smoke testing utility
        h4 That we use in the Node.js Project
        h3 To make sure we don't break your code!
        h4 and that the ecosystem is healthy
      
      section
        h2 citgm grabs the source code of a named module
        h3 runs npm install and npm test
        h4 it then reports results
        
      section
        h4 it has a logger with various verbosity levels
        img(src='images/pass.png' alt='it totes passed!' width='60%')
        img.headroom(src='images/install-verbose.gif' alt='such verbosity!')
      
      section
        h4 Results can be published as:
        h2 mardown
        img.headroom(src='images/markdown.png' alt='nice markdown!' width='80%')
      section
        h4 Results can be published as:
        h2 tap
        img.headroom(src='images/tap.png' alt='tap it in' width='80%')
      section
        h4 Results can be published as:
        h2 xunit
        img.headroom(src='images/xunit.png' alt='xunit reporter' width='80%')

      section(data-bespoke-backdrop='recurse')
        h1 citgm-all
        h2.headroom Currently testing
        h2 70 modules
      
      section
        h2 This includes:
        h3 core ecosystem modules
        
        ul
          li.hide
          li request
          li express
          li body-parser
          li graceful-fs
          li level
          li async
          li ws
          li socket.io
          li serialport
          li lodash && underscore
          li q && bluebird
      
      section
        h2 This includes:
        h3 modules for streams
        
        ul
          li.hide
          li readable-stream
          li through2
          li split2
          li duplexer2
          li bl
          li binary-split
          li sax
          li duplexify
          li pumpify
          li from2
      
      seciton
        h2 This includes:
        h3 modules for the front end and tooling
        ul
          li.hide
          li browserify
          li vinyl-fs
          li gulp
          li react
          li jQuery
          li node-sass
          li ember-cli
          li commander
          li pug
      
      section(data-bespoke-backdrop='confused-bowie')
        h1 Why would you do something like that
      
      section
        h2 Every test in the Node.js ecosystem
        h3 Is an integration test for Core

      section(data-bespoke-backdrop='precog')
        h1 We can find things, before they break
      
      section
        h2 We run citgm in CI
        h3 It is now mandatory to be passing
        h4 For all semver-major changes and releases
        img.headroom(src='images/ci.png' alt='show some images of our CI in jenkins' width='60%')

      section(data-bespoke-backdrop='complicated')
        h1 How does it work?
      
      section(data-bespoke-backdrop='wutang')
        h1 We do a lot of wrapping
      
      section
        h1 npm view
      
      section(data-bespoke-backdrop='pupper')
        h1 we wrap that
      
      section
        h1 npm pack
      
      section(data-bespoke-backdrop='kitt')
        h1 we wrap that
      
      section
        h1 npm install
        
      section(data-bespoke-backdrop='pupper-too')
        h1 we wrap that
      
      section
        h1 npm test
      
      section(data-bespoke-backdrop='burrito-pupper')
        h1 we wrap that

      //- section(data-bespoke-backdrop='recurse')
      //-   h1 I'm considering abstracting it

      section(data-bespoke-backdrop='confused-bowie')
        h1 Why would you do something like that
      
      section(data-bespoke-backdrop='chuck-thumbs-up')
        h2 npm already does all this stuff!
        h3 Every build we do in CI already has it!
        h4 The npm cli api is not going to change on us

      section(data.bespoke-backdrop="breaking")
        h1.
          So how
          do things break?
      
      section
        h1 Graceful-fs v3.x

      section
        h1 Jade
      
      section
        h2 Jade moved orgs but didn't update their package.json
        img.headroom(src='images/jade.png' alt='fixing jade' width='50%')

      section
        h1 Body Parser

      section
        img(src='images/change-parse.png' width='70%' height='70%')
      
      section
        img(src='images/diff.png' width='70%' height='70%')
      
      section
        img(src='images/infinity.png' width='70%' height='70%')
      
      section
        h2 Before Change
        pre
          code.language-javascript.
            > var parse = require('querystring').parse;
            > parse('%p=123', undefined, undefined,
            >  {maxKeys: Infinity}).length;
            < 1
      section
        h2 After Change
        pre
          code.language-javascript.
            > var parse = require('querystring').parse;
            > parse('%p=123', undefined, undefined,
            >   {maxKeys: Infinity}).length;
            < 0

      

      section
        h2 Thank You
        img.headroom(src='images/best-gif-evar.gif' alt='a surfing puppy' width='20%')
        h3 Myles Borins
        h4 @thealphanerd

    div#ibm
      h3 IBM

    div#twits
      h3 @thealphanerd
    script(src='build/build.js')